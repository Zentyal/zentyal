<%args>
    $fs => 'ntvfs'
    $workgroup
    $netbiosName
    $description
    $mode
    $realm
    $domain
    @shares
    $roamingProfiles => 0
    $profilesPath
    $sysvolPath
    $unmanagedAcls => 0
    $print => 0
    @printers => ()
    $disableFullAudit => 0

    $antivirus => 0
    $antivirus_exceptions => {}
    $antivirus_config => {}

    $recycle => 0
    $recycle_exceptions => {}
    $recycle_config => {}

    $prefix => 'Zentyal'
    $backup_path => '/tmp'

    $openchangeEnabled => undef
    $openchangeProvisioned => undef
</%args>
<%init>
use EBox::Gettext;
</%init>
[global]
    workgroup = <% $workgroup %>
    realm = <% $realm %>
    netbios name = <% $netbiosName %>
    server string = <% $description %>
    server role = <% $mode %>
    server role check:inhibit = yes
% if ($fs eq 's3fs') {
    server services = s3fs, rpc, wrepl, ldap, cldap, kdc, drepl, winbind, ntp_signd, kcc, dnsupdate
% } else {
    server services = smb, rpc, wrepl, ldap, cldap, kdc, drepl, winbind, ntp_signd, kcc, dnsupdate
% }
    server signing = auto

    log level = 2
    log file = /var/log/samba/samba.log

% unless ($print) {
    load printers = no
    printcap name = /dev/null
    show add printer wizard = no
    disable spoolss = yes
% }

% if ($openchangeEnabled and $openchangeProvisioned) {
### Configuration required by OpenChange server (Module is enabled) ###
    dcerpc endpoint servers = +epmapper, +mapiproxy
    dcerpc_mapiproxy:server = true
    dcerpc_mapiproxy:interfaces = exchange_emsmdb, exchange_nsp, exchange_ds_rfr
### Configuration required by OpenChange server ###
% } else {
### OpenChange module not active, no configuration for it
% }

% if ($mode eq 'dc') {
%   if ($roamingProfiles) {
[profiles]
    path = <% $profilesPath %>
    browseable = no
    read only = no
%   }

[netlogon]
    path = <% $sysvolPath %>/<% $domain %>/scripts
    browseable = no
    read only = yes

[sysvol]
    path = <% $sysvolPath %>
    read only = no
% }

[homes]
    comment = <% __('Home Directories') %>
    path = /home/%S
    read only = no
    browseable = no
    create mask = 0611
    directory mask = 0711
% my $av = ($antivirus xor defined($antivirus_exceptions->{'users'}));
% my $rb = ($recycle xor defined($recycle_exceptions->{'users'}));
% my $objects = 'acl_xattr';
% unless ($disableFullAudit) {
%   $objects .= ' full_audit';
% }
% if ($av) {
%   $objects .= ' scannedonly';
% }
% if ($rb) {
%   $objects .= ' recycle';
% }
    vfs objects = <% $objects %>
    full_audit:success = connect opendir disconnect unlink mkdir rmdir open rename
    full_audit:failure = connect opendir disconnect unlink mkdir rmdir open rename
% if ($av) {
%   foreach my $key (keys %{$antivirus_config}) {
%       next unless $key;
    scannedonly: <% $key %> = <% $antivirus_config->{$key} %>
%   }
% }
% if ($rb) {
%   foreach my $key (keys %{$recycle_config}) {
%       next unless $key;
    recycle: <% $key %> = <% $recycle_config->{$key} %>
%   }
% }

# <% @shares ? "Shares\n" : "No shares configured" %>
% foreach my $share (@shares) {
[<% $share->{share} %>]
    comment = <% $share->{comment} %>
    path = <% $share->{path} %>
    browseable = Yes
    read only = No
    force create mode = 0660
    force directory mode = 0660
% if ($share->{guest}) {
    guest ok = yes
% }
% my $av = ($antivirus xor defined($antivirus_exceptions->{'share'}->{$share->{'share'}}));
% my $rb = ($recycle xor defined($recycle_exceptions->{'share'}->{$share->{'share'}}));
% my $objects = 'acl_xattr';
% unless ($disableFullAudit) {
%   $objects .= ' full_audit';
% }
% if ($av) {
%   $objects .= ' scannedonly';
% }
% if ($rb) {
%   $objects .= ' recycle';
% }
    vfs objects = <% $objects %>
    acl_xattr:ignore system acls = <%  $unmanagedAcls ? 'no' : 'yes' %>
    full_audit:success = connect opendir disconnect unlink mkdir rmdir open rename
    full_audit:failure = connect opendir disconnect unlink mkdir rmdir open rename
% if ($av) {
%   foreach my $key (keys %{$antivirus_config}) {
%       next unless $key;
    scannedonly: <% $key %> = <% $antivirus_config->{$key} %>
%   }
% }
% if ($rb) {
%   foreach my $key (keys %{$recycle_config}) {
%       next unless $key;
    recycle: <% $key %> = <% $recycle_config->{$key} %>
%   }
% }

% }

% if ($print) {
[print$]
    comment = Point and Print Printer Drivers
    path = /opt/samba4/var/print
    read only = No

[printers]
    comment = All Printers
    path = /opt/samba4/var/spool
    browseable = Yes
    read only = No
    printable = Yes

% foreach my $printer (@printers) {
%   next unless (length ($printer->{'users'}) > 0);
[<% $printer->{'name'} %>]
 path = /var/spool/samba
 read only = Yes
 printable = Yes
 valid users = <% "@{$printer->{'users'}}" %>
%   }
% }

% if ($antivirus) {
[<% $prefix %>-quarantine]
    comment = "Quarantine"
    path = <% $antivirus_config->{quarantine_dir} %>
    browseable = Yes
    read only = No
% }
