<%flags>
  inherit => '/ajax/tableModal.mas'
</%flags>
<%args>
  $model
  $action => 'view'
  $editid => ''
  $hasChanged => 1
  $filter => ''
  $page => 0
  $tpages => 0
  $selectCallerId => undef
  %presetParams => ()
</%args>
<%init>
use EBox::Gettext;
use EBox::Model::DataTable;
use POSIX;
use Perl6::Junction qw(any);
</%init>
<& SELF:view,
   model      => $model,
   action     => $action,
&>

<%doc>
  Method: _body

     Set the model viewer body. Check the overridden method very
     carefully.

  Overrides:

     /ajax/modelViewer.mas:_body

</%doc>
<%method _body>
<%args>
  $model
  $action => 'view'
  $editid => ''
  $hasChanged => 1
  $filter => ''
  $page => 0
  $tpages => 0
  %presetParams => ()
</%args>
<%init>
  use EBox::Gettext;

  # Fetch table head from model
  my @tableHead = @{$model->table()->{'tableDescription'}};
  # Pointer to different values for convenience
  my $actions = $model->table()->{'actions'};
  my $changeView = $model->action('changeView');
  my $printableRowName = $model->table()->{'printableRowName'};
  my $tableName = $model->table()->{'tableName'} . '_modal';
  my $printableTableName = $model->table()->{'printableTableName'};
  my @ids;
  if (not $model->customFilter()) {
    @ids =  @{$model->ids()};
  } else {
    @ids = @{$model->customFilterIds($filter)};
  }
  unless ($page) {
    $page = 0;
  }


  # If the action is a preset update, choose for an edition or an
  # addition whether the editid is set or not
  if ( $action eq 'presetUpdate' ) {
      $action = 'changeAdd' if (not $editid);
      $action = 'changeEdit' if ( $editid );
  }

my $showEditForm    = 0;
my $changeAddAction = 0;
my $viewAction      = 0;
if ($action eq 'view') {
    $viewAction = 1;
} elsif ($action eq 'changeAdd') {
    $changeAddAction = 1 ;
    $showEditForm = 1;
} elsif ($action eq  'viewAndAdd') {
    $viewAction = 1;
    $changeAddAction = 1 ;
    $showEditForm = 1;
} elsif ($action eq 'clone') {
    $changeAddAction = 1;
    $showEditForm = 1;
} elsif ($action eq 'changeEdit') {
    $showEditForm = 1;
}

my $pageSize = $model->pageSizeIntValue();

my $requestArgs = $m->request_args();
my $selectCallerId  = $requestArgs->{selectCallerId};
</%init>
<div id="<% 'hiddenDiv_' . $model->name() | h %>_modal" class="hidden"></div>
<div id='error_<% $model->modelName() | hu %>_modal'></div>
<div id="<% $model->modelName() %>_modal">
<& .pageTitle &>

% if ( $model->pageTitle() ) {
%      my $viewCustomizer = $model->viewCustomizer();
%      my $msg = $viewCustomizer ? $viewCustomizer->permanentMessage() : undef;
%      my $type = $viewCustomizer ? $viewCustomizer->permanentMessageType() : undef;
%      if ($msg) {
<& /msg.mas,
   msg => $msg,
   class => $type,
&>
%      }
%      if ( $model->message() ) {
<& /msg.mas,
   msg => $model->popMessage(),
   class => $model->messageClass()
&>
%      }
% }


% if ($model->help()) {
<div class="help">
  <% $model->help() %>
</div>
% }

%  if (not $showEditForm)  {
%    if ( $model->printableModelName() )  {
<& PARENT:title,
   title => $model->headTitle()
&>
%    }
%    if ($changeView and exists $actions->{'add'} and (not $changeAddAction))  {
  <button type="button" class='btn btn-icon btn-add'
      name='add'
         onClick="<%
                 $model->modalChangeViewJS( changeType => "changeAdd",
                      editId => "undefined",
                      page => $page,
                      isFilter => 0,
                      selectCallerId => $selectCallerId)
                %>;return false"><% __('Add new') %></button>
   <br/>
   <br/>
%    }
  <span id="<% 'creatingForm_' . $tableName %>"></span>
%  }

%# add/edit/clone form
%  if ( $changeAddAction or $showEditForm ) {
<& SELF:editFormTitle,
   action => $action,
   printableRowName => $printableRowName,
&>
<& SELF:editForm,
  model => $model,
  action => $action,
  changeAddAction => $changeAddAction,
  editid => $editid,
  presetParams => \%presetParams,
&>

%  }


% if (@ids or length($filter) > 0)
%  {
%    if ( $action eq 'changeAdd' or $action eq 'changeEdit' )
%    {
% if ($printableTableName) {
<h3>
  <% $printableTableName %>
</h3>
% }
%    }
<table class="bDataTable">
    <tr>
        <td>
<form action="javascript:void(0)">
%    my $filterId =  $tableName  .  '_filterLoading';
  <input type='text'
      name='<%
              $tableName
            %>'
      id='<%
            $tableName . "_filter"
          %>'
      value="<%
              $filter
             %>"
  />
  <input type='submit'
      name='filter'
      value="<% __('Search') %>"
      title="Apply"
      onClick="Zentyal.TableHelper.setLoading('<%
                             $filterId
                            %>');
                <%
                  $model->modalChangeViewJS( changeType => "changeList",
                     editId => 'undefined',
                     page => 0,
                     isFilter => 1)
               %>;
               return false"
  />
  <span id="<%
              $filterId
            %>"
  ></span>
</form>
        </td>
    </tr>
</table>
<table class='<%
               $model->table()->{'class'}
              %>'>

<& SELF:tableHead,
    model => $model,
    tableHead => \@tableHead,
    actions => 1,
    page => $page
 &>

    <tbody>
<%perl>
    my $displayRows = 0;
    my $matches = 0;
    for ( my $idx = 0; $idx < scalar(@ids); $idx++)
    {
      my  $row;
      if (not $model->customFilter() and defined($filter) and (length($filter) > 0)) {
        $row = $model->row($ids[$idx]);
        if (not ($row->matchFilter($filter))) {
          next;
        }
      } else {
        $matches++;
        unless ($matches > ($pageSize * $page)) {

            next;
        }
        $displayRows++;
      if ($displayRows > $pageSize) {
            next;
        };
        $row = $model->row($ids[$idx]);
      }
</%perl>

      <tr class='border'
          id="<%
                $row->id()
              %>">

%      foreach my $td (@{$row->elements()})
%      {
%        next unless ($td->HTMLViewer());
        <td class='tcenter'>
          <&
            $td->HTMLViewer(),
            'data' => $td
          &>
        </td>

%    }

<& SELF:actionCell, model => $model,
                    actions => $actions,

                    row => $row,

                    idx  => $idx,
                    ids => \@ids,

                    changeView => $changeView,
                    page => $page,

                    selectCallerId => $selectCallerId,
                    &>

      </tr>
%     if ($displayRows == $model->pageSize() and not (defined($filter) and length($filter) > 0) ) {
%       $matches = scalar(@ids);
%       last;
%     }
%   }
    </tbody>
</table>

<table class="bDataTable">
    <tr>
    <td class="tright">
 <& /ajax/tablePager.mas,
   model => $model,
   page => $page,
   tpages => POSIX::ceil($matches / $pageSize) - 1,
&>
    </td>
    </tr>
</table>


% } else {
<input type="hidden"
  id="<% $tableName . '_pageSize' %>"
  value="<% $model->pageSize() %>"
>
% }

% if ( $action eq 'changeEdit' and $editid ) {
<script>Zentyal.TableHelper.highlightRow('<% $editid %>', 1);</script>
% }
<& .doneButton, model => $model, selectCallerId => $selectCallerId &>
</div>
% # End body method
</%method>

<%method editForm>
<%args>
$model
$action
$editid
%presetParams
$changeAddAction
</%args>
<%init>
my $tableName = $model->table()->{'tableName'} . '_modal';
my @tableHead = @{$model->table()->{'tableDescription'}};

# Fetch the data to be displayed in setters, if we are editing a row
# we should show the contents of the current fields. If we are
# adding a new row, the fields are empty except for a preset values
# adding where preset contents must be shown
my @formData;
if ($editid and ($editid ne 'undefined')) {
   my $rowEdit = $model->row($editid);
   @formData = @{$rowEdit->elements()};
   if ($action eq 'clone') {
          # unique fields should not be cloned
          my @uniqFields = grep { $_->unique()  } @tableHead;
          foreach my $uniqField (@uniqFields) {
              foreach my $clonedField (@formData) {
                  if ($uniqField->fieldName() eq $clonedField->fieldName()) {
                      $clonedField = $uniqField;
                      last;
                  }
              }
          }
      }
} elsif ( ((keys %presetParams) > 0)
            and $action eq 'presetUpdate') {
      # The preset is not empty
      @formData = values(%presetParams);
} else {
      @formData = @tableHead;
}

my $forceAction;
if ($changeAddAction) {
   $forceAction = 'changeAdd';
} elsif ($action eq 'clone') {
   $forceAction = 'changeAdd';
} else {
  $forceAction = $action;
}
</%init>

<form name="<% $tableName . '_form' %>">
  <table class='formTable'>
    <tbody>
     <col width="1*" />
     <col width="auto" />
      <& PARENT:editRowFields,
         modelName => $tableName,
         formData => \@formData
      &>
      <& SELF:buttons, forceAction => $forceAction &>
    </tbody>
  </table>
</form>

%   my $customizer = $formData[0]->model()->viewCustomizer();
%   if ($customizer) {
<script>
  <%   $customizer->onChangeActionsJS(modal => 1) %>
</script>
%    }
</%method>


<%doc>
   Method: buttons

     Show the button to submit the form

  Overrides:

     /ajax/modelViewer.mas:buttons

</%doc>
<%method buttons>
<%args>
$forceAction => undef
</%args>
<%init>
  # Getting the arguments from the first request
  my $requestArgs = $m->request_args();
  my $model  = $requestArgs->{model};
  my $action = $requestArgs->{action};
  my $editid = $requestArgs->{editid};
  my $filter = $requestArgs->{filter};
  my $page   = $requestArgs->{page};
  my $tpages = $requestArgs->{tpages};
  my $changeView = $model->action('changeView');
  my $selectCallerId  = $requestArgs->{selectCallerId};

  if ( $action eq 'presetUpdate' ) {
      $action = 'changeAdd' if ( not $editid );
      $action = 'changeEdit' if ( $editid );
  }

  if ($forceAction) {
      $action = $forceAction;
  }
</%init>
<tr>
  <td id="applyChanges">
  </td>
  <td id="<% 'buttons_' . $model->modelName() . '_modal'%>">
% if ( $action eq 'changeAdd' or $action eq 'viewAndAdd') {
    <& /input/submit.mas,
        class => 'btn btn-icon btn-add',
        type => 'submit',
        name => 'add',
        value => __('Add'),
        title => 'Add',
        onclick => $model->modalAddNewRowJS($page, undef, selectCallerId => $selectCallerId) . '; return false'
    &>
% } elsif ($action eq 'changeEdit') {
    <& /ajax/customActions.mas, model => $model, id => $editid &>
    <& /input/submit.mas,
        class => '',
        type => 'submit',
        name => 'change',
        value => __('Change'),
        title => 'Change',
        onclick => $model->changeRowJS($editid,  $page, 1, selectCallerId => $selectCallerId) . '; return false'
    &>
% }
% if ($changeView) {
    <& /input/submit.mas,
        class => '',
        type => 'submit',
        name => 'cancel',
        value => __('Cancel'),
        title => 'Cancel',
        onclick => $model->modalChangeViewJS(changeType => 'changeList',
                          editId => 'undefined',
                          page => $page,
                          isFilter => 0,
                          selectCallerId => $selectCallerId) . '; return false'
    &>
% }
  </td>
</tr>
</%method>

<%method actionCell>
<%doc>
    Print the action cell for the row

    Parameters:
        $model - model of the table
        $idx
        $actions
        $row   - the row printed
        $changeView
        $page  - table's page

Warning: this must be somewaht synchronized with SUPER method,
we dont parametize more the SUPER method to avoid more slowness with
this particular case
</%doc>
<%args>
$model
$actions

$idx
@ids

$row
$changeView
$page
$selectCallerId
</%args>
        <td class='tcenter'
            id='actionsCell_<%
                              $row->{id}
                            %>'>
<%perl>
      my $rowReadOnly = $row->readOnly()   ;

      my $disabled = '';
      my ($edit, $edit_msg);
      my ($delete, $delete_msg);
      my ($clone, $clone_msg);
      if (not $rowReadOnly) {
          $edit = 'edit';
          $edit_msg = __('Edit');
          $delete = 'delete';
          $delete_msg = __('Delete');
          $clone = 'clone';
          $clone_msg = __('Clone');
      } else {
          $disabled = 'disabled';
          $edit = 'edit-inactive';
          $delete = 'delete-inactive';
          $edit_msg = __('Read-only row: edit disabled');
          $delete_msg = __('Read-only row: delete disabled');
          $clone = 'clone-inactive';
          $clone_msg = __('Read-only row: clone disabled');
      }

</%perl>
<& /ajax/customActions.mas, model => $model, id => $row->{id}, type => 'image' &>

%      if ($actions->{'del'})
%      {
          <button class='btn-only-icon btn-delete'
              <%
                $disabled
              %>
              type='button'
              name='del'
              value="Del"
              title="<% $delete_msg %>"
              alt="Del"
              onclick="<%
                          $model->actionClickedJS('del',
                             $row->{id},
                            $page,
                            1,
                            selectCallerId => $selectCallerId
                           )
                       %>"
          />

%      }
%      if ($changeView)   {


          <button  class='btn-only-icon btn-edit'
              <%
                $disabled
              %>
              type='button'
              name='edit'
              value="edit"
              title="<% $edit_msg %>"
              onClick="<%
                          $model->modalChangeViewJS(
                            changeType => 'changeEdit',
                             editId => $row->{'id'},
                             page => $page,
                             isFilter => 0,
                             selectCallerId => $selectCallerId)
                          %>"
          />
%      }

%      if ($actions->{'clone'}) {
          <button class='btn-only-icon btn-clone'
              <%
                $disabled
              %>
              type='button'
              name='clone'
              value="Clone"
              title="<% $clone_msg  %>"
              alt="Clone"
              onClick="<%
                          $model->actionClickedJS('clone',
                             $row->{id},
                             $page,
                             1,
                             selectCallerId => $selectCallerId)
                       %>"
          />
%     }
        </td>
</%method>

<%doc>
  Method: pageTitle

     Set the page title

  Parameters:

     title - String the title

</%doc>
<%def .pageTitle>
<%args>
  $title => undef
  $crumbs => undef
</%args>
<& /title.mas,
    title => $title,
    crumbs => $crumbs
&>
</%def>


<%def .doneButton>
<%args>
$model
$selectCallerId
</%args>
<%init>
my $empty = $model->size() == 0;
if ($empty) {
  return;
}

my $cancelJs =$model->modalCancelAddJS(selectCallerId => $selectCallerId);
</%init>
<p>
<table>
 <tr>
    <td><& /input/submit.mas,
        class => '',
        type => 'submit',
        name => 'done',
        value => __('Done'),
        title => 'Done',
        onclick => 'Zentyal.Dialog.close(); return false'
    &></td>
    <td><& /input/submit.mas,
        class => '',
        type => 'submit',
        name => 'cancel',
        value => __('Cancel'),
        title => 'Cancel',
        onclick => $cancelJs . '; Zentyal.Dialog.close(); return false',
    &></td>
 </tr>
</table>
</%def>

